
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.*;
import java.util.Date;
import javax.swing.*;
import javax.sound.sampled.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Dhruv
 */
public class ACalculator extends javax.swing.JFrame {

    double frstnum=0;
    double scndnum=0;
    double ans=0;
    String opt="";
    String cnvrt1="";
    String cnvrt2="";
    int xtoybutton = 0;
    int txtempty=0;
    
   
    /**
     * Creates new form NewJFrame
     */
    public ACalculator(){
        try{
        initComponents();
        }
        catch(Exception e){}
        setIcon();
        convertedtxt.setVisible(false);
        jMenu1.setIcon(stndrd.getIcon());
        jFileChooser1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        bckspc = new javax.swing.JButton();
        txt = new javax.swing.JTextField();
        clr = new javax.swing.JButton();
        power = new javax.swing.JButton();
        jB0 = new javax.swing.JButton();
        jB1 = new javax.swing.JButton();
        jB2 = new javax.swing.JButton();
        jB3 = new javax.swing.JButton();
        jB4 = new javax.swing.JButton();
        jB5 = new javax.swing.JButton();
        jB6 = new javax.swing.JButton();
        jB7 = new javax.swing.JButton();
        jB8 = new javax.swing.JButton();
        jB9 = new javax.swing.JButton();
        mul = new javax.swing.JButton();
        jFileChooser1 = new javax.swing.JFileChooser();
        subtrct = new javax.swing.JButton();
        add = new javax.swing.JButton();
        div = new javax.swing.JButton();
        deci = new javax.swing.JButton();
        eql = new javax.swing.JButton();
        log = new javax.swing.JButton();
        sin = new javax.swing.JButton();
        pi = new javax.swing.JButton();
        cos = new javax.swing.JButton();
        xtoy = new javax.swing.JButton();
        tan = new javax.swing.JButton();
        cosh = new javax.swing.JButton();
        tanh = new javax.swing.JButton();
        xto2 = new javax.swing.JButton();
        sinh = new javax.swing.JButton();
        undrroot = new javax.swing.JButton();
        combobox = new javax.swing.JComboBox<>();
        unitv1 = new javax.swing.JComboBox<>();
        unitv2 = new javax.swing.JComboBox<>();
        unitl1 = new javax.swing.JComboBox<>();
        unitl2 = new javax.swing.JComboBox<>();
        unita1 = new javax.swing.JComboBox<>();
        unita2 = new javax.swing.JComboBox<>();
        rvrs = new javax.swing.JButton();
        convertedtxt = new javax.swing.JTextField();
        convert = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Ans = new javax.swing.JTextArea();
        save = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        stndrd = new javax.swing.JMenuItem();
        sci = new javax.swing.JMenuItem();
        con = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        his = new javax.swing.JMenu();
        show = new javax.swing.JRadioButtonMenuItem();
        hide = new javax.swing.JRadioButtonMenuItem();

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton4.setText("3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculator");
        setIconImage(getIconImage());
        setMinimumSize(new java.awt.Dimension(600, 700));
        setName("calc"); // NOI18N
        setPreferredSize(new java.awt.Dimension(600, 700));
        setResizable(false);
        setSize(new java.awt.Dimension(600, 790));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bckspc.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        bckspc.setText("‚Üê");
        bckspc.setEnabled(false);
        bckspc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bckspcActionPerformed(evt);
            }
        });
        getContentPane().add(bckspc, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, 60, 50));
        bckspc.getAccessibleContext().setAccessibleDescription("");

        txt.setEditable(false);
        txt.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txt.setText("0");
        txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtActionPerformed(evt);
            }
        });
        txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtKeyPressed(evt);
            }
        });
        getContentPane().add(txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 490, 40));

        clr.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        clr.setText("C");
        clr.setEnabled(false);
        clr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clrActionPerformed(evt);
            }
        });
        getContentPane().add(clr, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, 60, 50));

        power.setBackground(java.awt.Color.red);
        power.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        power.setForeground(new java.awt.Color(102, 102, 102));
        power.setText("OFF");
        power.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        power.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                powerActionPerformed(evt);
            }
        });
        getContentPane().add(power, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 100, 50, 50));

        jB0.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jB0.setText("0");
        jB0.setEnabled(false);
        jB0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB0ActionPerformed(evt);
            }
        });
        jB0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jB0KeyPressed(evt);
            }
        });
        getContentPane().add(jB0, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 380, 60, 50));

        jB1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jB1.setText("1");
        jB1.setEnabled(false);
        jB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB1ActionPerformed(evt);
            }
        });
        getContentPane().add(jB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 310, 60, 50));

        jB2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jB2.setText("2");
        jB2.setEnabled(false);
        jB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB2ActionPerformed(evt);
            }
        });
        getContentPane().add(jB2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 310, 60, 50));

        jB3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jB3.setText("3");
        jB3.setEnabled(false);
        jB3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB3ActionPerformed(evt);
            }
        });
        getContentPane().add(jB3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 310, 60, 50));

        jB4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jB4.setText("4");
        jB4.setEnabled(false);
        jB4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB4ActionPerformed(evt);
            }
        });
        getContentPane().add(jB4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 60, 50));

        jB5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jB5.setText("5");
        jB5.setEnabled(false);
        jB5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB5ActionPerformed(evt);
            }
        });
        getContentPane().add(jB5, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 240, 60, 50));

        jB6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jB6.setText("6");
        jB6.setEnabled(false);
        jB6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB6ActionPerformed(evt);
            }
        });
        getContentPane().add(jB6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 240, 60, 50));

        jB7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jB7.setText("7");
        jB7.setEnabled(false);
        jB7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB7ActionPerformed(evt);
            }
        });
        getContentPane().add(jB7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 60, 50));

        jB8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jB8.setText("8");
        jB8.setEnabled(false);
        jB8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB8ActionPerformed(evt);
            }
        });
        getContentPane().add(jB8, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 60, 50));

        jB9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jB9.setText("9");
        jB9.setEnabled(false);
        jB9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB9ActionPerformed(evt);
            }
        });
        jB9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jB9KeyPressed(evt);
            }
        });
        getContentPane().add(jB9, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 170, 60, 50));

        mul.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        mul.setText("X");
        mul.setEnabled(false);
        mul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mulActionPerformed(evt);
            }
        });
        getContentPane().add(mul, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 240, 60, 50));

        jFileChooser1.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        jFileChooser1.setApproveButtonText("SAVE");
        jFileChooser1.setCurrentDirectory(new java.io.File("C:\\"));
            jFileChooser1.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
            jFileChooser1.setInheritsPopupMenu(true);
            jFileChooser1.setOpaque(true);
            jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jFileChooser1ActionPerformed(evt);
                }
            });
            getContentPane().add(jFileChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 0, -1, -1));

            subtrct.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            subtrct.setText("-");
            subtrct.setEnabled(false);
            subtrct.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    subtrctActionPerformed(evt);
                }
            });
            getContentPane().add(subtrct, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 310, 60, 50));

            add.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            add.setText("+");
            add.setEnabled(false);
            add.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    addActionPerformed(evt);
                }
            });
            getContentPane().add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 380, 60, 50));

            div.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            div.setText("√∑");
            div.setEnabled(false);
            div.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    divActionPerformed(evt);
                }
            });
            getContentPane().add(div, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 170, 60, 50));

            deci.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            deci.setText(".");
            deci.setEnabled(false);
            deci.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    deciActionPerformed(evt);
                }
            });
            getContentPane().add(deci, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 380, 60, 50));

            eql.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            eql.setText("=");
            eql.setEnabled(false);
            eql.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    eqlActionPerformed(evt);
                }
            });
            getContentPane().add(eql, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 380, 60, 50));

            log.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            log.setText("Log");
            log.setEnabled(false);
            log.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    logActionPerformed(evt);
                }
            });
            getContentPane().add(log, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 120, 80, 60));

            sin.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            sin.setText("sin");
            sin.setEnabled(false);
            sin.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    sinActionPerformed(evt);
                }
            });
            getContentPane().add(sin, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 120, 80, 60));

            pi.setFont(new java.awt.Font("Malgun Gothic", 1, 24)); // NOI18N
            pi.setText("œÄ");
            pi.setEnabled(false);
            pi.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    piActionPerformed(evt);
                }
            });
            getContentPane().add(pi, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 200, 80, 60));

            cos.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            cos.setText("cos");
            cos.setEnabled(false);
            cos.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cosActionPerformed(evt);
                }
            });
            getContentPane().add(cos, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 200, 80, 60));

            xtoy.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            xtoy.setText("x^y");
            xtoy.setEnabled(false);
            xtoy.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    xtoyActionPerformed(evt);
                }
            });
            getContentPane().add(xtoy, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 360, 80, 60));

            tan.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            tan.setText("tan");
            tan.setEnabled(false);
            tan.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    tanActionPerformed(evt);
                }
            });
            getContentPane().add(tan, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 280, 80, 60));

            cosh.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            cosh.setText("cosh");
            cosh.setEnabled(false);
            cosh.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    coshActionPerformed(evt);
                }
            });
            getContentPane().add(cosh, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 200, 90, 60));

            tanh.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            tanh.setText("tanh");
            tanh.setEnabled(false);
            tanh.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    tanhActionPerformed(evt);
                }
            });
            getContentPane().add(tanh, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 280, 90, 60));

            xto2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            xto2.setText("x^2");
            xto2.setEnabled(false);
            xto2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    xto2ActionPerformed(evt);
                }
            });
            getContentPane().add(xto2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 280, -1, 60));

            sinh.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            sinh.setText("sinh");
            sinh.setEnabled(false);
            sinh.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    sinhActionPerformed(evt);
                }
            });
            getContentPane().add(sinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 120, 90, 60));

            undrroot.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            undrroot.setText("‚àö");
            undrroot.setEnabled(false);
            undrroot.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    undrrootActionPerformed(evt);
                }
            });
            getContentPane().add(undrroot, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, 60, 50));

            combobox.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select an Option", "Volume", "Length", "Area" }));
            combobox.setEnabled(false);
            combobox.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    comboboxActionPerformed(evt);
                }
            });
            getContentPane().add(combobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 200, 330, 40));

            unitv1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            unitv1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Litre", "m¬≥", "cm¬≥" }));
            unitv1.addAncestorListener(new javax.swing.event.AncestorListener() {
                public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                    unitv1AncestorAdded(evt);
                }
                public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                }
                public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                }
            });
            unitv1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    unitv1ActionPerformed(evt);
                }
            });
            getContentPane().add(unitv1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 90, 30));

            unitv2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            unitv2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Litre", "m¬≥", "cm¬≥" }));
            unitv2.addAncestorListener(new javax.swing.event.AncestorListener() {
                public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                    unitv1AncestorAdded(evt);
                }
                public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                }
                public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                }
            });
            unitv2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    unitv2ActionPerformed(evt);
                }
            });
            getContentPane().add(unitv2, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 10, 90, 30));

            unitl1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            unitl1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "km", "m", "cm", "mm", "inches", "feet" }));
            unitl1.addAncestorListener(new javax.swing.event.AncestorListener() {
                public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                    unitv1AncestorAdded(evt);
                }
                public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                }
                public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                }
            });
            unitl1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    unitl1ActionPerformed(evt);
                }
            });
            getContentPane().add(unitl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 140, 30));

            unitl2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            unitl2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "km", "m", "cm", "mm", "inches", "feet" }));
            unitl2.addAncestorListener(new javax.swing.event.AncestorListener() {
                public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                    unitv1AncestorAdded(evt);
                }
                public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                }
                public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                }
            });
            unitl2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    unitl2ActionPerformed(evt);
                }
            });
            getContentPane().add(unitl2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 10, 130, 30));

            unita1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            unita1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "km¬≤", "m¬≤", "Acres", "Hectares", "yards¬≤" }));
            unita1.addAncestorListener(new javax.swing.event.AncestorListener() {
                public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                    unitv1AncestorAdded(evt);
                }
                public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                }
                public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                }
            });
            unita1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    unita1ActionPerformed(evt);
                }
            });
            getContentPane().add(unita1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 140, 30));

            unita2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            unita2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "km¬≤", "m¬≤", "Acres", "Hectares", "yards¬≤" }));
            unita2.addAncestorListener(new javax.swing.event.AncestorListener() {
                public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                    unitv1AncestorAdded(evt);
                }
                public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                }
                public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                }
            });
            unita2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    unita2ActionPerformed(evt);
                }
            });
            getContentPane().add(unita2, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 10, 140, 30));

            rvrs.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            rvrs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rvrs.png"))); // NOI18N
            rvrs.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
            rvrs.addAncestorListener(new javax.swing.event.AncestorListener() {
                public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                    rvrsAncestorAdded(evt);
                }
                public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                }
                public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                }
            });
            rvrs.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    rvrsActionPerformed(evt);
                }
            });
            getContentPane().add(rvrs, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, 40, 40));

            convertedtxt.setEditable(false);
            convertedtxt.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            convertedtxt.setEnabled(false);
            convertedtxt.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    convertedtxtActionPerformed(evt);
                }
            });
            getContentPane().add(convertedtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 50, 380, 40));

            convert.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            convert.setText("Convert");
            convert.setEnabled(false);
            convert.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    convertActionPerformed(evt);
                }
            });
            getContentPane().add(convert, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 360, 160, 60));

            jScrollPane1.setEnabled(false);

            Ans.setEditable(false);
            Ans.setColumns(20);
            Ans.setFont(new java.awt.Font("Microsoft YaHei", 1, 14)); // NOI18N
            Ans.setRows(5);
            Ans.setText("CALCULATIONS HISTORY\n");
            Ans.setEnabled(false);
            jScrollPane1.setViewportView(Ans);

            getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 460, 420, 60));

            save.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
            save.setText("Save History");
            save.setEnabled(false);
            save.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    saveActionPerformed(evt);
                }
            });
            getContentPane().add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 540, 150, 40));

            jMenuBar1.setBackground(new java.awt.Color(0, 204, 51));

            jMenu1.setText("Standard");
            jMenu1.setEnabled(false);
            jMenu1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMenu1ActionPerformed(evt);
                }
            });

            stndrd.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
            stndrd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator (1).png"))); // NOI18N
            stndrd.setText("Standard");
            stndrd.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    stndrdActionPerformed(evt);
                }
            });
            jMenu1.add(stndrd);

            sci.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
            sci.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Online-Scientific-Calculator-And-Its-Benefits.png"))); // NOI18N
            sci.setText("Scientific");
            sci.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    sciActionPerformed(evt);
                }
            });
            jMenu1.add(sci);

            con.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
            con.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cnvrtr.png"))); // NOI18N
            con.setText("Converter");
            con.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    conActionPerformed(evt);
                }
            });
            jMenu1.add(con);

            jMenuBar1.add(jMenu1);

            jMenu2.setText("                                                                                                                 ");
            jMenu2.setEnabled(false);
            jMenuBar1.add(jMenu2);

            his.setText("View History Pane");
            his.setEnabled(false);
            his.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    hisActionPerformed(evt);
                }
            });

            show.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, 0));
            show.setSelected(true);
            show.setText("Show History Pane");
            show.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    showActionPerformed(evt);
                }
            });
            his.add(show);

            hide.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, 0));
            hide.setText("Hide History Pane");
            hide.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    hideActionPerformed(evt);
                }
            });
            his.add(hide);

            jMenuBar1.add(his);

            setJMenuBar(jMenuBar1);

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void sciActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_sciActionPerformed
        // TODO add your handling code here:
        try{
            AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("menu.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        txt.setSize(509, 40);
        jMenu1.setIcon(sci.getIcon());
        jMenu1.setText(sci.getText());
        txt.setText("0");
        this.setResizable(true);
        this.setSize(1188, 620);
        combobox.setVisible(false);
        undrroot.setVisible(true);
        unitv1.setVisible(false);
        unitl1.setVisible(false);
        unitl2.setVisible(false);
        unita1.setVisible(false);
        unita2.setVisible(false);
        convertedtxt.setVisible(false);
        convert.setVisible(false);
        unitv2.setVisible(false);
        log.setVisible(true);
        xtoy.setVisible(true);
        eql.setVisible(true);
        xto2.setVisible(true);
        sin.setVisible(true);
        cos.setVisible(true);
        tan.setVisible(true);
        sinh.setVisible(true);
        add.setVisible(true);
        subtrct.setVisible(true);
        mul.setVisible(true);
        div.setVisible(true);
        cosh.setVisible(true);
        tanh.setVisible(true);
        pi.setVisible(true);
        rvrs.setVisible(false);
    }//GEN-LAST:event_sciActionPerformed

    private void bckspcActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_bckspcActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        if (txt.getText().length() > 0) {
            if(txt.getText().length()==1){
                txt.setText("0");
            }
            else{
            txt.setText(txt.getText().substring(0, txt.getText().length() - 1));
            }
            }
    }//GEN-LAST:event_bckspcActionPerformed

    private void stndrdActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_stndrdActionPerformed
        // TODO add your handling code here:
        try{
                AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("menu.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        this.setResizable(true);
        this.setSize(320, 700);
        txt.setSize(509, 40);
        txt.setText("0");
        convertedtxt.setVisible(false);
        eql.setVisible(true);
        undrroot.setVisible(true);
        add.setVisible(true);
        subtrct.setVisible(true);
        mul.setVisible(true);
        div.setVisible(true);
        jMenu1.setIcon(stndrd.getIcon());
        jMenu1.setText(stndrd.getText());
        rvrs.setVisible(false);
    }//GEN-LAST:event_stndrdActionPerformed

    private void conActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_conActionPerformed
        // TODO add your handling code here:
        try{
            AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("menu.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        jMenu1.setIcon(con.getIcon());
        jMenu1.setText(con.getText());
        txt.setSize(509, 40);
        this.setResizable(true);
        this.setSize(1188, 620);
        txt.setText("0");
        combobox.setVisible(true);
        eql.setVisible(false);
        convertedtxt.setVisible(true);
        unitv1.setVisible(false);
        convertedtxt.setVisible(true);
        unitv2.setVisible(false);
        unitl1.setVisible(false);
        unitl2.setVisible(false);
        unita1.setVisible(false);
        unita2.setVisible(false);        
        convert.setVisible(true);
        undrroot.setVisible(false);
        add.setVisible(false);
        subtrct.setVisible(false);
        mul.setVisible(false);
        div.setVisible(false);
        log.setVisible(false);
        xtoy.setVisible(false);
        xto2.setVisible(false);
        sin.setVisible(false);
        cos.setVisible(false);
        tan.setVisible(false);
        sinh.setVisible(false);
        cosh.setVisible(false);
        tanh.setVisible(false);
        pi.setVisible(false);
    }//GEN-LAST:event_conActionPerformed

    private void powerActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_powerActionPerformed
        // TODO add your handling code here:
        try{
                AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("on.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        InputStream in;
        xtoybutton = 0;
        frstnum = 0;
        scndnum = 0;
        ans = 0;
        if ((""+power.getText()).equals("OFF")) {
            save.setEnabled(true);
            jMenu1.setEnabled(true);
            his.setEnabled(true);
            deci.setEnabled(true);
            jB0.setEnabled(true);
            jB1.setEnabled(true);
            jB2.setEnabled(true);
            jB3.setEnabled(true);
            jB4.setEnabled(true);
            jB5.setEnabled(true);
            jB6.setEnabled(true);
            jB7.setEnabled(true);
            jB8.setEnabled(true);
            jB9.setEnabled(true);
            add.setEnabled(true);
            mul.setEnabled(true);
            div.setEnabled(true);
            eql.setEnabled(true);
            subtrct.setEnabled(true);
            bckspc.setEnabled(true);
            undrroot.setEnabled(true);
            clr.setEnabled(true);
            combobox.setEnabled(true);
            log.setEnabled(true);
            xtoy.setEnabled(true);
            xto2.setEnabled(true);
            sin.setEnabled(true);
            cos.setEnabled(true);
            tan.setEnabled(true);
            sinh.setEnabled(true);
            cosh.setEnabled(true);
            tanh.setEnabled(true);
            pi.setEnabled(true);
            Ans.setEnabled(true);
            convertedtxt.setEnabled(true);
            txt.setEnabled(true);
            convert.setEnabled(true);
            Ans.setText("CALCULATIONS HISTORY\n");
            power.setText("ON");
            power.setBackground(Color.green);
            

        } else {
            power.setBackground(Color.red);
            save.setEnabled(false);
            txt.setText("");
            Ans.setText("CALCULATIONS HISTORY                                                  \n");
            Ans.setEnabled(false);
            his.setEnabled(false);
            jMenu1.setEnabled(false);
            deci.setEnabled(false);
            undrroot.setEnabled(false);
            jB1.setEnabled(false);
            jB0.setEnabled(false);
            jB2.setEnabled(false);
            jB3.setEnabled(false);
            jB4.setEnabled(false);
            jB5.setEnabled(false);
            jB6.setEnabled(false);
            jB7.setEnabled(false);
            jB8.setEnabled(false);
            jB9.setEnabled(false);
            add.setEnabled(false);
            mul.setEnabled(false);
            div.setEnabled(false);
            eql.setEnabled(false);
            subtrct.setEnabled(false);
            bckspc.setEnabled(false);
            clr.setEnabled(false);
            combobox.setEnabled(false);
            log.setEnabled(false);
            xtoy.setEnabled(false);
            xto2.setEnabled(false);
            sin.setEnabled(false);
            cos.setEnabled(false);
            tan.setEnabled(false);
            sinh.setEnabled(false);
            cosh.setEnabled(false);
            tanh.setEnabled(false);
            pi.setEnabled(false);
            convertedtxt.setEnabled(false);
            txt.setEnabled(false);
            convert.setEnabled(false);
            power.setText("OFF");
            rvrs.setVisible(false);
            unita1.setVisible(false);
            unita2.setVisible(false);
            unitv1.setVisible(false);
            unitv2.setVisible(false);
            unitl1.setVisible(false);
            unitl2.setVisible(false);
            combobox.setSelectedItem("Select an Option");
            try{
                AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("on.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }

    }//GEN-LAST:event_powerActionPerformed

    private void cosActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_cosActionPerformed
        // TODO add your handling code here:
        try{
            AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        double ops = Double.parseDouble(String.valueOf(txt.getText()));
        Ans.setText(Ans.getText()+"cos("+txt.getText()+")=");
        ops = Math.cos(ops);
        txt.setText(String.valueOf(ops));
        Ans.setText(Ans.getText()+txt.getText()+"\n");
    }//GEN-LAST:event_cosActionPerformed

    private void tanActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_tanActionPerformed
        try{
            AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        double ops = Double.parseDouble(String.valueOf(txt.getText()));
        Ans.setText(Ans.getText()+"tan("+txt.getText()+")=");
        ops = Math.tan(ops);
        txt.setText(String.valueOf(ops));
        Ans.setText(Ans.getText()+txt.getText()+"\n");
    }//GEN-LAST:event_tanActionPerformed

    private void jB7ActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_jB7ActionPerformed
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        if(txt.getText().length()<=12){
        if(txt.getText().equals("0") || txt.getText().equals("0.0") || ans==Double.parseDouble((txt.getText().equals(""))?"0.0":txt.getText()) || txtempty>0){
            txtempty=0;
            txt.setText("7");
        }
        else{
        txt.setText(txt.getText() + "7");
        }}
        else if(txt.getText().contains(".")){
            if (txt.getText().substring(txt.getText().indexOf("."),txt.getText().length()).length()<=15) {
                 txt.setText(txt.getText() + "7");
            }            
        }
            else{
                try{             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("Error.wav").getAbsoluteFile());                Clip clip = AudioSystem.getClip();                clip.open(audioInputStream);                clip.start();            }             catch(IOException e){                JOptionPane.showMessageDialog(null,e);            }            JOptionPane.showMessageDialog(null,"Max Digits Reached!");
            }
    }//GEN-LAST:event_jB7ActionPerformed

    private void jB8ActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_jB8ActionPerformed
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            } 
        if(txt.getText().length()<=12){
        if(txt.getText().equals("0") || txt.getText().equals("0.0") || ans==Double.parseDouble((txt.getText().equals(""))?"0.0":txt.getText()) || txtempty>0){
            txtempty=0;
            txt.setText("8");
        }
        else{
        txt.setText(txt.getText() + "8");
        }}        else if(txt.getText().contains(".")){            if (txt.getText().substring(txt.getText().indexOf("."),txt.getText().length()).length()<=15) {                 txt.setText(txt.getText() + "8");            }                    }
            else{
                try{             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("Error.wav").getAbsoluteFile());                Clip clip = AudioSystem.getClip();                clip.open(audioInputStream);                clip.start();            }             catch(IOException e){                JOptionPane.showMessageDialog(null,e);            }            JOptionPane.showMessageDialog(null,"Max Digits Reached!");
            }
    }//GEN-LAST:event_jB8ActionPerformed

    private void jB9ActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_jB9ActionPerformed
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            } 
        if(txt.getText().length()<=12){
        if(txt.getText().equals("0") || txt.getText().equals("0.0") || ans==Double.parseDouble((txt.getText().equals(""))?"0.0":txt.getText()) || txtempty>0){
            txtempty=0;
            txt.setText("9");         
        }
        else{
        txt.setText(txt.getText() + "9");
        }}        else if(txt.getText().contains(".")){            if (txt.getText().substring(txt.getText().indexOf("."),txt.getText().length()).length()<=15) {                 txt.setText(txt.getText() + "9");            }                    }
            else{
                try{             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("Error.wav").getAbsoluteFile());                Clip clip = AudioSystem.getClip();                clip.open(audioInputStream);                clip.start();            }             catch(IOException e){                JOptionPane.showMessageDialog(null,e);            }            JOptionPane.showMessageDialog(null,"Max Digits Reached!");
            }
    }//GEN-LAST:event_jB9ActionPerformed

    private void jB4ActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_jB4ActionPerformed
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        if(txt.getText().length()<=12){
        if(txt.getText().equals("0") || txt.getText().equals("0.0") || ans==Double.parseDouble((txt.getText().equals(""))?"0.0":txt.getText()) || txtempty>0){
            txtempty=0;
            txt.setText("4");
        }
        else{
        txt.setText(txt.getText() + "4");
        }}        else if(txt.getText().contains(".")){            if (txt.getText().substring(txt.getText().indexOf("."),txt.getText().length()).length()<=15) {                 txt.setText(txt.getText() + "4");            }                    }
            else{
                try{             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("Error.wav").getAbsoluteFile());                Clip clip = AudioSystem.getClip();                clip.open(audioInputStream);                clip.start();            }             catch(IOException e){                JOptionPane.showMessageDialog(null,e);            }            
                JOptionPane.showMessageDialog(null,"Max Digits Reached!");
            }
    }//GEN-LAST:event_jB4ActionPerformed

    private void jB5ActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_jB5ActionPerformed
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        if(txt.getText().length()<=12){
        if(txt.getText().equals("0") || txt.getText().equals("0.0") || ans==Double.parseDouble((txt.getText().equals(""))?"0.0":txt.getText()) || txtempty>0){
            txtempty=0;
            txt.setText("5");
        }
        else{
        txt.setText(txt.getText() + "5");
        }}        else if(txt.getText().contains(".")){            if (txt.getText().substring(txt.getText().indexOf("."),txt.getText().length()).length()<=15) {                 txt.setText(txt.getText() + "5");            }                    }
            else{
                try{             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("Error.wav").getAbsoluteFile());                Clip clip = AudioSystem.getClip();                clip.open(audioInputStream);                clip.start();            }             catch(IOException e){                JOptionPane.showMessageDialog(null,e);            }                            JOptionPane.showMessageDialog(null,"Max Digits Reached!");
            }
    }//GEN-LAST:event_jB5ActionPerformed

    private void jB6ActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_jB6ActionPerformed
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        if(txt.getText().length()<=12){
        if(txt.getText().equals("0") || txt.getText().equals("0.0") || ans==Double.parseDouble((txt.getText().equals(""))?"0.0":txt.getText()) || txtempty>0){
            txtempty=0;
            txt.setText("6");
        }
        else{
        txt.setText(txt.getText() + "6");
        }}        else if(txt.getText().contains(".")){            if (txt.getText().substring(txt.getText().indexOf("."),txt.getText().length()).length()<=15) {                 txt.setText(txt.getText() + "6");            }                    }
            else{
                try{             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("Error.wav").getAbsoluteFile());                Clip clip = AudioSystem.getClip();                clip.open(audioInputStream);                clip.start();            }             catch(IOException e){                JOptionPane.showMessageDialog(null,e);            }                            JOptionPane.showMessageDialog(null,"Max Digits Reached!");
            }
    }//GEN-LAST:event_jB6ActionPerformed

    private void jB1ActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_jB1ActionPerformed
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        if(txt.getText().length()<=12){
        if(txt.getText().equals("0") || txt.getText().equals("0.0") || ans==Double.parseDouble((txt.getText().equals(""))?"0.0":txt.getText()) || txtempty>0){
            txtempty=0;
            txt.setText("1");
        }
        else{
        txt.setText(txt.getText() + "1");
        }}        else if(txt.getText().contains(".")){            if (txt.getText().substring(txt.getText().indexOf("."),txt.getText().length()).length()<=15) {                 txt.setText(txt.getText() + "1");            }                    }
        
            else{
                try{             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("Error.wav").getAbsoluteFile());                Clip clip = AudioSystem.getClip();                clip.open(audioInputStream);                clip.start();            }             catch(IOException e){                JOptionPane.showMessageDialog(null,e);            }                            JOptionPane.showMessageDialog(null,"Max Digits Reached!");
            }
    }//GEN-LAST:event_jB1ActionPerformed

    private void jB2ActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_jB2ActionPerformed
        try{
            AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start(); 
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        if(txt.getText().length()<=12){
        if(txt.getText().equals("0") || txt.getText().equals("0.0") || ans==Double.parseDouble((txt.getText().equals(""))?"0.0":txt.getText()) || txtempty>0){
            txtempty=0;
            txt.setText("2");
        }
        else{
        txt.setText(txt.getText() + "2");
        }}        
        else if(txt.getText().contains(".")){            
            if (txt.getText().substring(txt.getText().indexOf("."),txt.getText().length()).length()<=15) {
                txt.setText(txt.getText() + "2");            
            }
            else{
                try{             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("Error.wav").getAbsoluteFile());                Clip clip = AudioSystem.getClip();                clip.open(audioInputStream);                clip.start();            }             catch(IOException e){                JOptionPane.showMessageDialog(null,e);            }                            JOptionPane.showMessageDialog(null,"Max Digits Reached!");
            }
        }
    }//GEN-LAST:event_jB2ActionPerformed

    private void jB3ActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_jB3ActionPerformed
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start(); 
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        if(txt.getText().length()<=12){
        if(txt.getText().equals("0") || txt.getText().equals("0.0") || ans==Double.parseDouble((txt.getText().equals(""))?"0.0":txt.getText()) || txtempty>0){
            txtempty=0;
            txt.setText("3");
        }
        else{
        txt.setText(txt.getText() + "3");
        }}        else if(txt.getText().contains(".")){            if (txt.getText().substring(txt.getText().indexOf("."),txt.getText().length()).length()<=15) {                 txt.setText(txt.getText() + "3");            }                    }
            else{
                try{             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("Error.wav").getAbsoluteFile());                Clip clip = AudioSystem.getClip();                clip.open(audioInputStream);                clip.start();            }             catch(IOException e){                JOptionPane.showMessageDialog(null,e);            }                            JOptionPane.showMessageDialog(null,"Max Digits Reached!");
            }
    }//GEN-LAST:event_jB3ActionPerformed

    private void jB0ActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_jB0ActionPerformed
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        if(txt.getText().length()<=12){
       if(txt.getText().equals("0") || txt.getText().equals("0.0") || ans==Double.parseDouble((txt.getText().equals(""))?"0.0":txt.getText()) || txtempty>0){
            txtempty=0;
            txt.setText("0");
        }
        else{
        txt.setText(txt.getText() + "0");
        }}        else if(txt.getText().contains(".")){            if (txt.getText().substring(txt.getText().indexOf("."),txt.getText().length()).length()<=15) {                 txt.setText(txt.getText() + "0");            
        }                    }
        
            else{
                try{             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("Error.wav").getAbsoluteFile());                Clip clip = AudioSystem.getClip();                clip.open(audioInputStream);                clip.start();            }             catch(IOException e){                JOptionPane.showMessageDialog(null,e);            }                            JOptionPane.showMessageDialog(null,"Max Digits Reached!");
            }
    }//GEN-LAST:event_jB0ActionPerformed

    private void clrActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_clrActionPerformed
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        if(!opt.equals("")){
            Ans.setText(Ans.getText()+"\n");
            try{
        switch (opt) {
            case "divide":
                frstnum*=frstnum;
                break;
            case "add":
                frstnum-=frstnum;
                break;
            case "mul":
                frstnum/=frstnum;
                break;
            case "subtrct":
                frstnum+=frstnum;
                break;
            default:
                break;
        }
            }
            catch(Exception e){}
        }
        else{
        frstnum = 0;
        }
        scndnum = 0;
        txt.setText("0");
        ans = 0;
        convertedtxt.setText("");
        
    }//GEN-LAST:event_clrActionPerformed

    private void deciActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_deciActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        if (!txt.getText().contains(".")) {
            txt.setText(txt.getText() + ".");
        }
        else{
            txt.setText("0.");
        }
    }//GEN-LAST:event_deciActionPerformed

    private void undrrootActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_undrrootActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        if(!opt.equals("")){
            try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("Error.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
            JOptionPane.showMessageDialog(null,"Avoid Under Root with Arithmetic Functions!");
            
            return;
        }
        double ops = Double.parseDouble(String.valueOf(txt.getText()));
        Ans.setText(Ans.getText()+"‚àö"+txt.getText()+"=");
        ops = Math.sqrt(ops);
        txt.setText(String.valueOf(ops));
        Ans.setText(Ans.getText()+txt.getText()+"\n");        
    }//GEN-LAST:event_undrrootActionPerformed

    private void txtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKeyPressed
            
    }//GEN-LAST:event_txtKeyPressed

    private void xto2ActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_xto2ActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        double ops = Double.parseDouble(String.valueOf(txt.getText()));
        Ans.setText(Ans.getText()+"("+txt.getText()+")¬≤=");
        ops = Math.pow(ops, 2);
        txt.setText(String.valueOf(ops));
        Ans.setText(Ans.getText()+txt.getText()+"\n");
    }//GEN-LAST:event_xto2ActionPerformed

    private void sinActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_sinActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        double ops = Double.parseDouble(String.valueOf(txt.getText()));
        Ans.setText(Ans.getText()+"sin("+txt.getText()+")=");
        ops = Math.sin(ops);
        txt.setText(String.valueOf(ops));
        Ans.setText(Ans.getText()+txt.getText()+"\n");
    }//GEN-LAST:event_sinActionPerformed

    private void sinhActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_sinhActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        double ops = Double.parseDouble(String.valueOf(txt.getText()));
        Ans.setText(Ans.getText()+"sinh("+txt.getText()+")=");
        ops = Math.sinh(ops);
        txt.setText(String.valueOf(ops));
        Ans.setText(Ans.getText()+txt.getText()+"\n");
    }//GEN-LAST:event_sinhActionPerformed

    private void coshActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_coshActionPerformed
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        double ops = Double.parseDouble(String.valueOf(txt.getText()));
        Ans.setText(Ans.getText()+"cosh("+txt.getText()+")=");
        ops = Math.cosh(ops);
        txt.setText(String.valueOf(ops));
        Ans.setText(Ans.getText()+txt.getText()+"\n");
    }//GEN-LAST:event_coshActionPerformed

    private void tanhActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_tanhActionPerformed
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        double ops = Double.parseDouble(String.valueOf(txt.getText()));
        Ans.setText(Ans.getText()+"tanh("+txt.getText()+")=");
        ops = Math.tanh(ops);
        txt.setText(String.valueOf(ops));
        Ans.setText(Ans.getText()+txt.getText()+"\n");
    }//GEN-LAST:event_tanhActionPerformed

    private void piActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_piActionPerformed
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        double ops = Double.parseDouble(String.valueOf(txt.getText()));
        Ans.setText(Ans.getText()+""+txt.getText()+"=");
        ops = ops * Math.PI;
        txt.setText(String.valueOf(ops));
        Ans.setText(Ans.getText()+txt.getText()+"\n");
    }//GEN-LAST:event_piActionPerformed

    private void txtActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_txtActionPerformed
    // TODO add your handling code here:
    }//GEN-LAST:event_txtActionPerformed

    private void logActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_logActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        double ops = Double.parseDouble(String.valueOf(txt.getText()));
        Ans.setText(Ans.getText()+"log("+txt.getText()+")=");
        ops = Math.log(ops);
        txt.setText(String.valueOf(ops));
        Ans.setText(Ans.getText()+txt.getText()+"\n");
    }//GEN-LAST:event_logActionPerformed

    private void xtoyActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_xtoyActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        if (xtoybutton == 0) {
            frstnum = Double.parseDouble(String.valueOf(txt.getText()));
            Ans.setText(Ans.getText()+txt.getText()+"^");
            try{             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("Error.wav").getAbsoluteFile());                Clip clip = AudioSystem.getClip();                clip.open(audioInputStream);                clip.start();            }             catch(IOException e){                JOptionPane.showMessageDialog(null,e);            }            JOptionPane.showMessageDialog(rootPane, "Your x = \"" + txt.getText() + "\" Now enter y "
                    + "And Press (x^y) or = button!");
            
            txt.setText("");
            xtoybutton++;
        } else {
            scndnum = Double.parseDouble(String.valueOf(txt.getText()));
            Ans.setText(Ans.getText()+txt.getText()+"=");
            txt.setText(String.valueOf(Math.pow(frstnum, scndnum)));
            Ans.setText(Ans.getText()+txt.getText()+"\n");
            xtoybutton = 0;
            frstnum = 0;
            scndnum = 0;
        }
    }//GEN-LAST:event_xtoyActionPerformed

    private void divActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_divActionPerformed
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        if(txt.getText().equals("")){
            try{             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("Error.wav").getAbsoluteFile());                Clip clip = AudioSystem.getClip();                clip.open(audioInputStream);                clip.start();            }             catch(IOException e){                JOptionPane.showMessageDialog(null,e);            }            JOptionPane.showMessageDialog(null, "Enter Second Operand first!");
            return;
        }
        scndnum = Double.parseDouble(txt.getText());
        Ans.setText(Ans.getText()+txt.getText()+"√∑"); 
        try{
        switch (opt) {
            case "divide":
                txt.setText(""+frstnum / scndnum);
                break;
            case "add":
                txt.setText(""+(frstnum + scndnum));
                break;
            case "mul":
                txt.setText(""+frstnum * scndnum);
                break;
            case "subtrct":
                txt.setText(""+(frstnum - scndnum));
                break;
            default:
                break;
        }
            }
            catch(Exception e){}
        frstnum = Double.parseDouble(txt.getText());
        opt = "divide";
        txt.setText("");
    }//GEN-LAST:event_divActionPerformed

    private void eqlActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_eqlActionPerformed
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        if(txt.getText().equals("")){            try{             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("Error.wav").getAbsoluteFile());                Clip clip = AudioSystem.getClip();                clip.open(audioInputStream);                clip.start();            }             catch(IOException e){                JOptionPane.showMessageDialog(null,e);            }            JOptionPane.showMessageDialog(null, "Enter Second Operand first!");            return;        }
        txtempty++;
        if(xtoybutton>0){
            Ans.setText(Ans.getText()+txt.getText()+"=");
            txt.setText(String.valueOf(Math.pow(frstnum, scndnum)));
            Ans.setText(Ans.getText()+txt.getText()+"\n");
            xtoybutton = 0;
            frstnum = 0;
            scndnum = 0;            
        }
        else{
            try{
        switch (opt) {
            case "divide":
                scndnum = Double.parseDouble(txt.getText());
                ans = frstnum / scndnum;
                Ans.setText(Ans.getText()+scndnum+"="+String.valueOf(ans)+"           \n");
        txt.setText(String.valueOf(ans));  
                break;
            case "add":
                scndnum = Double.parseDouble(txt.getText());
                ans = frstnum + scndnum;
                Ans.setText(Ans.getText()+scndnum+"="+String.valueOf(ans)+"           \n");
                txt.setText(String.valueOf(ans));  
                break;
            case "mul":
                scndnum = Double.parseDouble(txt.getText());
                ans = frstnum * scndnum;
                Ans.setText(Ans.getText()+scndnum+"="+String.valueOf(ans)+"           \n");
                txt.setText(String.valueOf(ans));  
                break;
            case "subtrct":
                scndnum = Double.parseDouble(txt.getText());
                ans = frstnum - scndnum;
                Ans.setText(Ans.getText()+scndnum+"="+String.valueOf(ans)+"           \n");
                txt.setText(String.valueOf(ans));  
                break;
            default:
                ans=Double.parseDouble(txt.getText());
                txtempty=-1;
                Ans.setText(Ans.getText()+ans+"="+String.valueOf(ans)+"           \n");
                txt.setText(String.valueOf(ans));  
                break;
        }
            }
            catch(Exception e){}
            if(txtempty==-1){
             txtempty=0;   
            }
            else{
            frstnum = 0;
            ans = 0;
            }
        scndnum = 0;
        xtoybutton = 0;
        opt = "";
        }
    }//GEN-LAST:event_eqlActionPerformed

    private void mulActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_mulActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        if(txt.getText().equals("")){            try{             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("Error.wav").getAbsoluteFile());                Clip clip = AudioSystem.getClip();                clip.open(audioInputStream);                clip.start();            }             catch(IOException e){                JOptionPane.showMessageDialog(null,e);            }            JOptionPane.showMessageDialog(null, "Enter Second Operand first!");            return;        }scndnum = Double.parseDouble(txt.getText());
        Ans.setText(Ans.getText()+txt.getText()+"x"); 
        try{
        switch (opt) {
            case "divide":
                txt.setText(""+frstnum / scndnum);
                break;
            case "add":
                txt.setText(""+(frstnum + scndnum));
                break;
            case "mul":
                txt.setText(""+frstnum * scndnum);
                break;
            case "subtrct":
                txt.setText(""+(frstnum - scndnum));
                break;
            default:
                break;
        }
            }
            catch(Exception e){} 
        frstnum = Double.parseDouble(txt.getText());
        opt = "mul";
        txt.setText("");
    }//GEN-LAST:event_mulActionPerformed

    private void subtrctActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_subtrctActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        if(txt.getText().equals("")){            try{             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("Error.wav").getAbsoluteFile());                Clip clip = AudioSystem.getClip();                clip.open(audioInputStream);                clip.start();            }             catch(IOException e){                JOptionPane.showMessageDialog(null,e);            }            JOptionPane.showMessageDialog(null, "Enter Second Operand first!");            return;        }scndnum = Double.parseDouble(txt.getText());
        Ans.setText(Ans.getText()+txt.getText()+"-"); 
        try{
        switch (opt) {
            case "divide":
                txt.setText(""+frstnum / scndnum);
                break;
            case "add":
                txt.setText(""+(frstnum + scndnum));
                break;
            case "mul":
                txt.setText(""+frstnum * scndnum);
                break;
            case "subtrct":
                txt.setText(""+(frstnum - scndnum));
                break;
            default:
                break;
        }
            }
            catch(Exception e){} 
        frstnum = Double.parseDouble(txt.getText());
        opt = "subtrct";
        txt.setText("");
    }//GEN-LAST:event_subtrctActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        if(txt.getText().equals("")){            try{             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("Error.wav").getAbsoluteFile());                Clip clip = AudioSystem.getClip();                clip.open(audioInputStream);                clip.start();            }             catch(IOException e){                JOptionPane.showMessageDialog(null,e);            }            JOptionPane.showMessageDialog(null, "Enter Second Operand first!");            return;        }scndnum = Double.parseDouble(txt.getText());
        Ans.setText(Ans.getText()+txt.getText()+"+"); 
        try{
        switch (opt) {
            case "divide":
                txt.setText(""+frstnum / scndnum);
                break;
            case "add":
                txt.setText(""+(frstnum + scndnum));
                break;
            case "mul":
                txt.setText(""+frstnum * scndnum);
                break;
            case "subtrct":
                txt.setText(""+(frstnum - scndnum));
                break;
            default:
                break;
        }
            }
            catch(Exception e){}
        frstnum = Double.parseDouble(txt.getText());
        opt = "add";
        txt.setText("");
    }//GEN-LAST:event_addActionPerformed

    private void comboboxActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_comboboxActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        txt.setText("0");
        convertedtxt.setText("0");
        
        if (combobox.getSelectedItem().equals("Volume")) {
            unitv1.setVisible(true);
            unitv2.setVisible(true);
            unitl1.setVisible(false);
            unitl2.setVisible(false);
            unita1.setVisible(false);
            unita2.setVisible(false);
            rvrs.setVisible(true);
            txt.setText("0");
        } else if (combobox.getSelectedItem().equals("Length")) {
            unitl1.setVisible(true);
            unitl2.setVisible(true);
            rvrs.setVisible(true);
            txt.setText("0");
            unitv1.setVisible(false);
            unitv2.setVisible(false);
            unita1.setVisible(false);
            unita2.setVisible(false);
        } else if (combobox.getSelectedItem().equals("Area")) {
            unita1.setVisible(true);
            unita2.setVisible(true);
            txt.setText("0");
            unitv1.setVisible(false);
            unitv2.setVisible(false);
            unitl1.setVisible(false);
            unitl2.setVisible(false);
            rvrs.setVisible(true);
        } else {
            txt.setText("0");
            unita1.setVisible(false);
            unita2.setVisible(false);
            unitv1.setVisible(false);
            unitv2.setVisible(false);
            unitl1.setVisible(false);
            unitl2.setVisible(false);
        }

    }//GEN-LAST:event_comboboxActionPerformed

    private void unitv1ActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_unitv1ActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        
    }//GEN-LAST:event_unitv1ActionPerformed

    private void unitv2ActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_unitv2ActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        
    }//GEN-LAST:event_unitv2ActionPerformed

    private void convertedtxtActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_convertedtxtActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
    }//GEN-LAST:event_convertedtxtActionPerformed

    private void convertActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_convertActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        double n = Double.parseDouble(txt.getText());
        if (combobox.getSelectedItem().equals("Volume")) {
            cnvrt1 = (String) unitv1.getSelectedItem();
            cnvrt2 = (String) unitv2.getSelectedItem();
            if (cnvrt1.equals("Litre") && cnvrt2.equals("cm¬≥")) {
                convertedtxt.setText(String.valueOf(1000 * n));
            } else if (cnvrt1.equals("Litre") && cnvrt2.equals("m¬≥")) {
                convertedtxt.setText(String.valueOf(n / 1000));
            } else if (cnvrt1.equals("m¬≥") && cnvrt2.equals("cm¬≥")) {
                convertedtxt.setText(String.valueOf(n * 1000000));
            } else if (cnvrt1.equals("cm¬≥") && cnvrt2.equals("m¬≥")) {
                convertedtxt.setText(String.valueOf(n / 1000000));
            } else if (cnvrt1.equals("cm¬≥") && cnvrt2.equals("Litre")) {
                convertedtxt.setText(String.valueOf(n / 1000));
            } else if (cnvrt1.equals("m¬≥") && cnvrt2.equals("Litre")) {
                convertedtxt.setText(String.valueOf(n * 1000));
            } else {
                convertedtxt.setText(String.valueOf(n));
            }
            Ans.setText(Ans.getText()+String.valueOf(n)+cnvrt1+" = "+convertedtxt.getText()+cnvrt2);
        }
        if (combobox.getSelectedItem().equals("Length")) {
            cnvrt1 = (String) unitl1.getSelectedItem();
            cnvrt2 = (String) unitl2.getSelectedItem();
            if (cnvrt1.equals("km") && cnvrt2.equals("m")) {
                convertedtxt.setText(String.valueOf(n * 1000));
            } else if (cnvrt1.equals("m") && cnvrt2.equals("km")) {
                convertedtxt.setText(String.valueOf(n / 1000));
            } else if (cnvrt1.equals("m") && cnvrt2.equals("cm")) {
                convertedtxt.setText(String.valueOf(n * 100));
            } else if (cnvrt1.equals("cm") && cnvrt2.equals("m")) {
                convertedtxt.setText(String.valueOf(n / 100));
            } else if (cnvrt1.equals("cm") && cnvrt2.equals("mm")) {
                convertedtxt.setText(String.valueOf(n * 10));
            } else if (cnvrt1.equals("mm") && cnvrt2.equals("cm")) {
                convertedtxt.setText(String.valueOf(n / 10));
            } else if (cnvrt1.equals("mm") && cnvrt2.equals("inches")) {
                convertedtxt.setText(String.valueOf(n * 0.03937));
            } else if (cnvrt1.equals("inches") && cnvrt2.equals("mm")) {
                convertedtxt.setText(String.valueOf(n / 0.03937));
            } else if (cnvrt1.equals("inches") && cnvrt2.equals("feet")) {
                convertedtxt.setText(String.valueOf(n * 0.8333));
            } else if (cnvrt1.equals("feet") && cnvrt2.equals("inches")) {
                convertedtxt.setText(String.valueOf(n / 0.8333));
            } else if (cnvrt1.equals("km") && cnvrt2.equals("cm")) {
                convertedtxt.setText(String.valueOf(n * 100000));
            } else if (cnvrt1.equals("cm") && cnvrt2.equals("km")) {
                convertedtxt.setText(String.valueOf(n / 100000));
            } else if (cnvrt1.equals("km") && cnvrt2.equals("mm")) {
                convertedtxt.setText(String.valueOf(n * 1000000));
            } else if (cnvrt1.equals("mm") && cnvrt2.equals("km")) {
                convertedtxt.setText(String.valueOf(n / 1000000));
            } else if (cnvrt1.equals("km") && cnvrt2.equals("inches")) {
                convertedtxt.setText(String.valueOf(n * 39370.1));
            } else if (cnvrt1.equals("inches") && cnvrt2.equals("km")) {
                convertedtxt.setText(String.valueOf(n / 39370.1));
            } else if (cnvrt1.equals("km") && cnvrt2.equals("feet")) {
                convertedtxt.setText(String.valueOf(n * 3280.84));
            } else if (cnvrt1.equals("feet") && cnvrt2.equals("km")) {
                convertedtxt.setText(String.valueOf(n / 3280.84));
            } else if (cnvrt1.equals("m") && cnvrt2.equals("mm")) {
                convertedtxt.setText(String.valueOf(n * 1000));
            } else if (cnvrt1.equals("mm") && cnvrt2.equals("m")) {
                convertedtxt.setText(String.valueOf(n / 1000));
            } else if (cnvrt1.equals("m") && cnvrt2.equals("inches")) {
                convertedtxt.setText(String.valueOf(n * 39.3701));
            } else if (cnvrt1.equals("inches") && cnvrt2.equals("m")) {
                convertedtxt.setText(String.valueOf(n / 39.3701));
            } else if (cnvrt1.equals("m") && cnvrt2.equals("feet")) {
                convertedtxt.setText(String.valueOf(n * 3.28084));
            } else if (cnvrt1.equals("feet") && cnvrt2.equals("m")) {
                convertedtxt.setText(String.valueOf(n / 3.28084));
            } else if (cnvrt1.equals("cm") && cnvrt2.equals("inches")) {
                convertedtxt.setText(String.valueOf(n * 0.393701));
            } else if (cnvrt1.equals("inches") && cnvrt2.equals("cm")) {
                convertedtxt.setText(String.valueOf(n / 0.393701));
            } else if (cnvrt1.equals("cm") && cnvrt2.equals("feet")) {
                convertedtxt.setText(String.valueOf(n * 0.0328084));
            } else if (cnvrt1.equals("feet") && cnvrt2.equals("cm")) {
                convertedtxt.setText(String.valueOf(n / 0.0328084));
            } else if (cnvrt1.equals("mm") && cnvrt2.equals("feet")) {
                convertedtxt.setText(String.valueOf(n * 0.003281));
            } else if (cnvrt1.equals("feet") && cnvrt2.equals("mm")) {
                convertedtxt.setText(String.valueOf(n / 0.003281));
            } else {
                convertedtxt.setText(String.valueOf(n));
            }
Ans.setText(Ans.getText()+String.valueOf(n)+cnvrt1+" = "+convertedtxt.getText()+cnvrt2);            
        }
        if (combobox.getSelectedItem().equals("Area")) {
            cnvrt1 = (String) unita1.getSelectedItem();
            cnvrt2 = (String) unita2.getSelectedItem();
            if (cnvrt1.equals("km¬≤") && cnvrt2.equals("m¬≤")) {
                convertedtxt.setText(String.valueOf(n * 1000000));
            } else if (cnvrt1.equals("m¬≤") && cnvrt2.equals("km¬≤")) {
                convertedtxt.setText(String.valueOf(n / 1000000));
            } else if (cnvrt1.equals("km¬≤") && cnvrt2.equals("Acres")) {
                convertedtxt.setText(String.valueOf(n / 0.00404686));
            } else if (cnvrt1.equals("Acres") && cnvrt2.equals("km¬≤")) {
                convertedtxt.setText(String.valueOf(n * 0.00404686));
            } else if (cnvrt1.equals("km¬≤") && cnvrt2.equals("Hectares")) {
                convertedtxt.setText(String.valueOf(n * 100));
            } else if (cnvrt1.equals("Hectares") && cnvrt2.equals("km¬≤")) {
                convertedtxt.setText(String.valueOf(n / 100));
            } else if (cnvrt1.equals("km¬≤") && cnvrt2.equals("yards¬≤")) {
                convertedtxt.setText(String.valueOf(n * 1195990));
            } else if (cnvrt1.equals("yards¬≤") && cnvrt2.equals("km¬≤")) {
                convertedtxt.setText(String.valueOf(n / 1195990));
            } else if (cnvrt1.equals("m¬≤") && cnvrt2.equals("Acres")) {
                convertedtxt.setText(String.valueOf(n / 4046.86));
            } else if (cnvrt1.equals("Acres") && cnvrt2.equals("m¬≤")) {
                convertedtxt.setText(String.valueOf(n * 4046.86));
            } else if (cnvrt1.equals("m¬≤") && cnvrt2.equals("Hectares")) {
                convertedtxt.setText(String.valueOf(n / 10000));
            } else if (cnvrt1.equals("Hectares") && cnvrt2.equals("m¬≤")) {
                convertedtxt.setText(String.valueOf(n / 10000));
            } else if (cnvrt1.equals("m¬≤") && cnvrt2.equals("yards¬≤")) {
                convertedtxt.setText(String.valueOf(n / 0.836127));
            } else if (cnvrt1.equals("yards¬≤") && cnvrt2.equals("m¬≤")) {
                convertedtxt.setText(String.valueOf(n*0.836127));
            } else if (cnvrt1.equals("Acres") && cnvrt2.equals("Hectares")) {
                convertedtxt.setText(String.valueOf(n / 2.47105));
            } else if (cnvrt1.equals("Hectares") && cnvrt2.equals("Acres")) {
                convertedtxt.setText(String.valueOf(n * 2.47105));
            } else if (cnvrt1.equals("Acres") && cnvrt2.equals("yards¬≤")) {
                convertedtxt.setText(String.valueOf(n / 0.000206612));
            } else if (cnvrt1.equals("yards¬≤") && cnvrt2.equals("Acres")) {
                convertedtxt.setText(String.valueOf(n * 0.000206612));
            } else if (cnvrt1.equals("Hectares") && cnvrt2.equals("yards¬≤")) {
                convertedtxt.setText(String.valueOf(n * 11959.9));
            } else if (cnvrt1.equals("yards¬≤") && cnvrt2.equals("Hectares")) {
                convertedtxt.setText(String.valueOf(n / 11959.9));
            } else {
                convertedtxt.setText(String.valueOf(n));
            }
            Ans.setText(Ans.getText()+String.valueOf(n)+cnvrt1+" = "+convertedtxt.getText()+cnvrt2);             
        }
        Ans.setText(Ans.getText()+"\n");
    }//GEN-LAST:event_convertActionPerformed

    private void unitl1ActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_unitl1ActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
    }//GEN-LAST:event_unitl1ActionPerformed

    private void unitl2ActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_unitl2ActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
    }//GEN-LAST:event_unitl2ActionPerformed

    private void unita1ActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_unita1ActionPerformed
        // TODO add your handling code here:
       try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
    }//GEN-LAST:event_unita1ActionPerformed

    private void unita2ActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_unita2ActionPerformed
        // TODO add your handling code here:
       try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
    }//GEN-LAST:event_unita2ActionPerformed

    private void rvrsActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_rvrsActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        if (combobox.getSelectedItem().equals("Volume")) {
            String t = "" + unitv1.getSelectedItem();
            unitv1.setSelectedItem(unitv2.getSelectedItem());
            unitv2.setSelectedItem(t);
        } else if (combobox.getSelectedItem().equals("Length")) {
            String t = "" + unitl1.getSelectedItem();
            unitl1.setSelectedItem(unitl2.getSelectedItem());
            unitl2.setSelectedItem(t);
        } else {
            String t = "" + unita1.getSelectedItem();
            unita1.setSelectedItem(unita2.getSelectedItem());
            unita2.setSelectedItem(t);
        }
    }//GEN-LAST:event_rvrsActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void hisActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_hisActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
    }//GEN-LAST:event_hisActionPerformed

    private void showActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_showActionPerformed
        // TODO add your handling code here:
        try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        Ans.setVisible(true);
        jScrollPane1.setVisible(true);
        save.setVisible(true);
        show.setSelected(true);
        hide.setSelected(false);
        
    }//GEN-LAST:event_showActionPerformed
    private void hideActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_hideActionPerformed
        // TODO add your handling code here:
       try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start();
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
        Ans.setVisible(false);
        jScrollPane1.setVisible(false);
        save.setVisible(false);
        show.setSelected(false);
        hide.setSelected(true);
    }//GEN-LAST:event_hideActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        unitv1.setVisible(false);
        unitv2.setVisible(false);
        unitl1.setVisible(false);
        unitl2.setVisible(false);
        unita1.setVisible(false);
        unita2.setVisible(false);  
         rvrs.setVisible(false);
        
    }//GEN-LAST:event_formWindowOpened

    private void saveActionPerformed(java.awt.event.ActionEvent evt)throws Exception {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
       
        Date date= new Date();
        try{             
            AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("Error.wav").getAbsoluteFile());                
            Clip clip = AudioSystem.getClip();                
            clip.open(audioInputStream);                
            clip.start();            
        }             
        catch(IOException e){                
            JOptionPane.showMessageDialog(null,e);            
        }
        int s=JOptionPane.showConfirmDialog(null, 
                    "Do you want to save History?", 
                    "Save", JOptionPane.YES_NO_OPTION);

            if(s == JOptionPane.YES_OPTION){
                try{
             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("click.wav").getAbsoluteFile());
                Clip clip = AudioSystem.getClip();
                clip.open(audioInputStream);
                clip.start(); 
            } 
            catch(IOException e){
                JOptionPane.showMessageDialog(null,e);
            }
                String content =date.toString().concat("\n")+Ans.getText().concat("\n");
        try {
            jFileChooser1.setVisible(true);
            int returnvalue= jFileChooser1.showSaveDialog(this);            
                int filenum=1; //if file already exists
            if(returnvalue == jFileChooser1.APPROVE_OPTION){
            File fil = new File(jFileChooser1.getSelectedFile()+"\\Calculator History.txt");
            // if file doesnt exists, then create it
            if (!fil.exists()) {
                fil.createNewFile();
            }
            else{
                while(fil.exists()){
                    fil=new File(jFileChooser1.getSelectedFile()+"\\Calculator History"+filenum+".txt");
                    filenum++;
                }
                fil.createNewFile();
            }
            FileWriter fw = new FileWriter(fil.getAbsoluteFile());
            BufferedWriter aw = new BufferedWriter(fw);
            aw.write(content);    //step2: write it
            aw.close();
            try{             AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("Error.wav").getAbsoluteFile());                Clip clip = AudioSystem.getClip();                clip.open(audioInputStream);                clip.start();            }             catch(IOException e){                JOptionPane.showMessageDialog(null,e);            }            JOptionPane.showMessageDialog(rootPane, "YOUR FILE WAS SAVED AT (\""+jFileChooser1.getSelectedFile()+"\") AS \"Calculator"+(--filenum)+".txt\"");
            Ans.setText("CALCULATIONS HISTORY"+"\n");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
            
            }
            else{
                Ans.setText(Ans.getText());
            }
            
    }//GEN-LAST:event_saveActionPerformed

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        // TODO add your handling code here:
        
        jFileChooser1.setVisible(false);
        
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void jB9KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jB9KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jB9KeyPressed

    private void jB0KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jB0KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jB0KeyPressed

    private void rvrsAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_rvrsAncestorAdded
        // TODO add your handling code here:
       
    }//GEN-LAST:event_rvrsAncestorAdded

    private void unitv1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_unitv1AncestorAdded
        // TODO add your handling code here:
              
    }//GEN-LAST:event_unitv1AncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ACalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ACalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ACalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ACalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        ACalculator form=new ACalculator();
        java.awt.EventQueue.invokeLater(() -> {
            form.setVisible(true);
        });        
    }
    
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Ans;
    private javax.swing.JButton add;
    private javax.swing.JButton bckspc;
    private javax.swing.JButton clr;
    private javax.swing.JComboBox<String> combobox;
    private javax.swing.JMenuItem con;
    private javax.swing.JButton convert;
    private javax.swing.JTextField convertedtxt;
    private javax.swing.JButton cos;
    private javax.swing.JButton cosh;
    private javax.swing.JButton deci;
    private javax.swing.JButton div;
    private javax.swing.JButton eql;
    private javax.swing.JRadioButtonMenuItem hide;
    private javax.swing.JMenu his;
    private javax.swing.JButton jB0;
    private javax.swing.JButton jB1;
    private javax.swing.JButton jB2;
    private javax.swing.JButton jB3;
    private javax.swing.JButton jB4;
    private javax.swing.JButton jB5;
    private javax.swing.JButton jB6;
    private javax.swing.JButton jB7;
    private javax.swing.JButton jB8;
    private javax.swing.JButton jB9;
    private javax.swing.JButton jButton4;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton log;
    private javax.swing.JButton mul;
    private javax.swing.JButton pi;
    private javax.swing.JButton power;
    private javax.swing.JButton rvrs;
    private javax.swing.JButton save;
    private javax.swing.JMenuItem sci;
    private javax.swing.JRadioButtonMenuItem show;
    private javax.swing.JButton sin;
    private javax.swing.JButton sinh;
    private javax.swing.JMenuItem stndrd;
    private javax.swing.JButton subtrct;
    private javax.swing.JButton tan;
    private javax.swing.JButton tanh;
    private javax.swing.JTextField txt;
    private javax.swing.JButton undrroot;
    private javax.swing.JComboBox<String> unita1;
    private javax.swing.JComboBox<String> unita2;
    private javax.swing.JComboBox<String> unitl1;
    private javax.swing.JComboBox<String> unitl2;
    private javax.swing.JComboBox<String> unitv1;
    private javax.swing.JComboBox<String> unitv2;
    private javax.swing.JButton xto2;
    private javax.swing.JButton xtoy;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Calculator.png"))); //To change body of generated methods, choose Tools | Templates.
    }

}